HTTP 1:
HTTP (Hypertext Transfer Protocol) is a set of rules that runs on top of the TCP/IP suite of protocols
and defines how files are to be transferred between clients
and servers on the world wide web.

the HTTP protocol did not use headers and only transmitted plain HTMLfiles.
It was a one-line protocol only supporting
the GET method.

The concept of headers both for requests (from the client machine)
as well as responses (from servers) was introduced.
The use of headers such as GET, POST, HEAD added extended
flexibility, none of which was possible with the earlier version.
Version information was now included.
It allowed a single request/response for every TCP connection.
Status codes were used to indicate successful requests and to indicate transmission errors.
The content-type header made it possible to send files other than plain HTML, including scripts and media.

It was no longer required for each connection to be terminated
immediately after every request was served with a response; instead,
with the keep-alive header, it was possible to have persistent 
connections. It allowed multiple requests/responses per TCP connection.
The Upgrade header was used to indicate a preference from the client 
that made it possible to switch to a more preferred protocol if found
appropriate by the server.HTTP/1.1 provided support for chunk transfers
that allowed streaming of content dynamically as chunks and for 
additional headers to be sent after the message body. 

HTTP 2:
It introduces the concept of a server push where the server anticipates
the resources that will be required by the client and pushes them 
prior to the client making requests. The client retains the authority
to deny the server push; however, in most cases, this feature adds a
lot of efficiency to the process.

Introduces the concept of multiplexing that interleaves the requests
and responses without head-of-line blocking and does so over a single
TCP connection.

It is a binary protocol i.e. only binary commands in the form of 0s and 1s
are transmitted over the wire. The binary framing layer divides the
message into frames that are segregated based on their type â€“ Data or Header.
This feature greatly increases efficiency in terms of security,
compression and multiplexing.




















  